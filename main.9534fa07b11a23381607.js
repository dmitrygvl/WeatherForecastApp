(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var a=n.getElementsByTagName("script");if(a.length)for(var c=a.length-1;c>-1&&!t;)t=a[c--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"a1835039ca5c16d4eece2db9392177b0.svg",n=JSON.parse(localStorage.getItem("recentSearch"))??[];async function a(e){const c=document.querySelector(".info"),r=document.querySelector(".history");try{const o=await async function(e){const t=`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&q=${e}&appid=cd35692496444ae52ba1a576e23c1d5c`,n=await fetch(t);return await n.json()}(e);!function(e,n){const a=`https://static-maps.yandex.ru/v1?apikey=ce3d2607-7277-4a80-945e-e03352ae7dbd&l=map&ll=${n.coord.lon},${n.coord.lat}&z=10`,c=new Date;e.innerHTML=`\n\n      <div class = "block data">\n          <div class = "location">\n             <img src = ${t} alt ="images pin" class = "img-pin"/> \n             <h1>${n.name}</h1>\n             \n      </div>\n      <div class="description"> \n          <p class="date">${c.toLocaleDateString("ru-RU")}</p>\n          <p class="weather-text">${n.weather[0].main} - ${n.weather[0].description}</p>\n          </div>\n          <div class="box-image"><img class="icon-weather" src="https://openweathermap.org/img/wn/${n.weather[0].icon}@2x.png" alt="Icon weather"></img>\n          <div class="text-temp">${n.main.temp}°C</div>\n          </div>\n\n          <class="block"><image id="map" src="${a}" /></div>\n`}(c,o),function(e){n.length>=10&&n.shift(),n.includes(e)||(n.push(e),localStorage.setItem("recentSearch",JSON.stringify(n)))}(o.name),(i=r).innerHTML="\n    <h2>История поиска</h2>\n  ",n.forEach((e=>{const t=document.createElement("a");t.innerText=e,t.setAttribute("href","#"),t.setAttribute("class","cityLink");const n=document.createElement("p");n.setAttribute("class","link-text"),n.appendChild(t),i.appendChild(n)})),document.querySelectorAll("a").forEach((e=>{e.addEventListener("click",(async t=>{t.preventDefault();const n=e.innerText;await a(n)}))}))}catch(e){console.error({getAndDisplayWeatherError:e}),c.innerHTML="Кажется, такого города не существует"}var i}!async function(e){document.getElementById("app").innerHTML='\n\n  <header class = "header info"></header>\n\n    <nav class="cities block">\n    \n      <form>\n        <input name="cityName" class="input-form" required autofocus placeholder="Введите город" />\n        <button class="button-form" type="submit">Искать</button>\n      </form>\n    \n      <section class="history block"></section>\n    </nav>\n  ';const t=document.querySelector(".input-form");document.querySelector("form").addEventListener("submit",(async e=>{e.preventDefault(),a(t.value),t.value=""}));const n=await async function(){const e=await fetch("https://get.geojs.io/v1/ip/geo.json");return(await e.json()).city}();await a(n)}()})();