(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var c=a.length-1;c>-1&&!e;)e=a[c--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"a1835039ca5c16d4eece2db9392177b0.svg";!async function(t){document.getElementById("app").innerHTML='\n\n  <header class = "header info"></header>\n\n    <nav class="cities block">\n    \n      <form>\n        <input name="cityName" class="input-form" required autofocus placeholder="Введите город" />\n        <button class="button-form" type="submit">Искать</button>\n      </form>\n    \n      <section class="history block"></section>\n    </nav>\n  ';const n=document.querySelector(".input-form"),a=document.querySelector("form"),c=document.querySelector(".info"),r=document.querySelector(".history"),i=JSON.parse(localStorage.getItem("recentSearch"))||[];async function o(t){try{const n=await async function(t){const e=`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&q=${t}&appid=cd35692496444ae52ba1a576e23c1d5c`,n=await fetch(e);return await n.json()}(t);!function(t,n){const a=`https://static-maps.yandex.ru/v1?apikey=ce3d2607-7277-4a80-945e-e03352ae7dbd&l=map&ll=${n.coord.lon},${n.coord.lat}&z=10`,c=new Date;t.innerHTML=`\n\n      <div class = "block data">\n          <div class = "location">\n             <img src = ${e} alt ="images pin" class = "img-pin"/> \n             <h1>${n.name}</h1>\n             \n      </div>\n      <div class="description"> \n          <p class="date">${c.toLocaleDateString("ru-RU")}</p>\n          <p class="weather-text">${n.weather[0].main} - ${n.weather[0].description}</p>\n          </div>\n          <div class="box-image"><img class="icon-weather" src="https://openweathermap.org/img/wn/${n.weather[0].icon}@2x.png" alt="Icon weather"></img>\n          <div class="text-temp">${n.main.temp}°C</div>\n          </div>\n\n          <class="block"><image id="map" src="${a}" /></div>\n`}(c,n),function(t){i.length>10&&i.shift(),i.includes(t)||(i.push(t),localStorage.setItem("recentSearch",JSON.stringify(i)))}(t),function(t,e){t.innerHTML="\n    <h2>История поиска</h2>\n  ",e.forEach((e=>{const n=document.createElement("a");n.innerText=e,n.setAttribute("href","#"),n.setAttribute("class","cityLink");const a=document.createElement("p");a.setAttribute("class","link-text"),a.appendChild(n),t.appendChild(a)}))}(r,i),document.querySelectorAll("a").forEach((t=>{t.addEventListener("click",(async e=>{e.preventDefault();const n=t.innerText;await o(n)}))}))}catch(t){console.error({getAndDisplayWeatherError:t}),c.innerHTML="Кажется, такого города не существует"}}a.addEventListener("submit",(async t=>{t.preventDefault(),o(n.value),n.value=""}));const s=await async function(){const t=await fetch("https://get.geojs.io/v1/ip/geo.json");return(await t.json()).city}();await o(s)}()})();